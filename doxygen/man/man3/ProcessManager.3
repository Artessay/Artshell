.TH "ProcessManager" 3 "2022年 八月 13日 星期六" "Version 1.0.0" "My Shell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ProcessManager
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ProcessManager\&.h>\fP
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBProcessManager\fP ()"
.br
.ti -1c
.RI "virtual \fB~ProcessManager\fP ()"
.br
.ti -1c
.RI "void \fBPrintJobList\fP (int output_fd=STDOUT_FILENO) const"
.br
.ti -1c
.RI "void \fBPrintJobListDone\fP (int output_fd=STDOUT_FILENO)"
.br
.ti -1c
.RI "unsigned int \fBJobInsert\fP (int pid, \fBjob_state\fP state, int argc, char *argv[])"
.br
.RI "添加进程 "
.ti -1c
.RI "void \fBJobRemove\fP (\fBjob_unit\fP *job)"
.br
.RI "删除进程 "
.ti -1c
.RI "void \fBJobRemove\fP (std::set< \fBjob_unit\fP >::iterator &job)"
.br
.ti -1c
.RI "int \fBForeGround\fP (unsigned int jobid)"
.br
.ti -1c
.RI "int \fBBackGround\fP (unsigned int jobid)"
.br
.in -1c
.SS "Private 属性"

.in +1c
.ti -1c
.RI "\fBHeap\fP< unsigned int > * \fBjob_heap\fP"
.br
.ti -1c
.RI "std::set< class \fBjob_unit\fP > \fBjobs\fP"
.br
.in -1c
.SH "详细描述"
.PP 
在文件 \fBProcessManager\&.h\fP 第 \fB78\fP 行定义\&.
.SH "构造及析构函数说明"
.PP 
.SS "ProcessManager::ProcessManager ()"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB77\fP 行定义\&.
.SS "ProcessManager::~ProcessManager ()\fC [virtual]\fP"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB90\fP 行定义\&.
.SH "成员函数说明"
.PP 
.SS "int ProcessManager::BackGround (unsigned int jobid)"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB205\fP 行定义\&.
.SS "int ProcessManager::ForeGround (unsigned int jobid)"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB176\fP 行定义\&.
.SS "unsigned int ProcessManager::JobInsert (int pid, \fBjob_state\fP state, int argc, char * argv[])"

.PP
添加进程 
.PP
\fB参数\fP
.RS 4
\fIpid\fP 进程号 
.br
\fIstate\fP 状态 
.br
\fIargc\fP 参数个数 
.br
\fIargv\fP 参数列表 
.RE
.PP
\fB返回\fP
.RS 4
unsigned int 进程作业号，0表示添加失败 
.RE
.PP
\fB版本\fP
.RS 4
0\&.1 
.RE
.PP
\fB作者\fP
.RS 4
邱日宏 (3200105842@zju.edu.cn) 
.RE
.PP
\fB日期\fP
.RS 4
2022-07-20 
.RE
.PP
\fB版权所有\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB140\fP 行定义\&.
.SS "void ProcessManager::JobRemove (\fBjob_unit\fP * job)"

.PP
删除进程 
.PP
\fB参数\fP
.RS 4
\fIjob\fP 
.RE
.PP
\fB版本\fP
.RS 4
0\&.1 
.RE
.PP
\fB作者\fP
.RS 4
邱日宏 (3200105842@zju.edu.cn) 
.RE
.PP
\fB日期\fP
.RS 4
2022-07-21 
.RE
.PP
\fB版权所有\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB159\fP 行定义\&.
.SS "void ProcessManager::JobRemove (std::set< \fBjob_unit\fP >::iterator & job)"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB168\fP 行定义\&.
.SS "void ProcessManager::PrintJobList (int output_fd = \fCSTDOUT_FILENO\fP) const"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB95\fP 行定义\&.
.SS "void ProcessManager::PrintJobListDone (int output_fd = \fCSTDOUT_FILENO\fP)"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB103\fP 行定义\&.
.SH "类成员变量说明"
.PP 
.SS "\fBHeap\fP<unsigned int>* ProcessManager::job_heap\fC [private]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB82\fP 行定义\&.
.SS "std::set<class \fBjob_unit\fP> ProcessManager::jobs\fC [private]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB83\fP 行定义\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 My Shell 的 源代码自动生成\&.
