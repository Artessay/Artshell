.TH "job_unit" 3 "2022年 八月 13日 星期六" "Version 1.0.0" "My Shell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
job_unit
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ProcessManager\&.h>\fP
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBjob_unit\fP (unsigned int _id, int _pid, \fBjob_state\fP _state, int _argc, char *_argv[])"
.br
.ti -1c
.RI "void \fBPrintJob\fP (int output_fd=STDOUT_FILENO)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBjob_unit\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBjob_unit\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBjob_unit\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBjob_unit\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBjob_unit\fP &rhs) const"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBjob_unit\fP &rhs) const"
.br
.in -1c
.SS "Public 属性"

.in +1c
.ti -1c
.RI "unsigned int \fBid\fP"
.br
.ti -1c
.RI "pid_t \fBpid\fP"
.br
.ti -1c
.RI "\fBjob_state\fP \fBstate\fP"
.br
.ti -1c
.RI "int \fBargc\fP"
.br
.ti -1c
.RI "char \fBargv\fP [\fBMAX_ARGUMENT_NUMBER\fP][\fBBUFFER_SIZE\fP]"
.br
.in -1c
.SH "详细描述"
.PP 
在文件 \fBProcessManager\&.h\fP 第 \fB30\fP 行定义\&.
.SH "构造及析构函数说明"
.PP 
.SS "job_unit::job_unit (unsigned int _id, int _pid, \fBjob_state\fP _state, int _argc, char * _argv[])"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB12\fP 行定义\&.
.SH "成员函数说明"
.PP 
.SS "bool job_unit::operator!= (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB45\fP 行定义\&.
.SS "bool job_unit::operator< (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB50\fP 行定义\&.
.SS "bool job_unit::operator<= (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB60\fP 行定义\&.
.SS "bool job_unit::operator== (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB40\fP 行定义\&.
.SS "bool job_unit::operator> (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB55\fP 行定义\&.
.SS "bool job_unit::operator>= (const \fBjob_unit\fP & rhs) const\fC [inline]\fP"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB65\fP 行定义\&.
.SS "void job_unit::PrintJob (int output_fd = \fCSTDOUT_FILENO\fP)"

.PP
在文件 \fBProcessManager\&.cpp\fP 第 \fB21\fP 行定义\&.
.SH "类成员变量说明"
.PP 
.SS "int job_unit::argc"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB74\fP 行定义\&.
.SS "char job_unit::argv[\fBMAX_ARGUMENT_NUMBER\fP][\fBBUFFER_SIZE\fP]"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB75\fP 行定义\&.
.SS "unsigned int job_unit::id"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB71\fP 行定义\&.
.SS "pid_t job_unit::pid"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB72\fP 行定义\&.
.SS "\fBjob_state\fP job_unit::state"

.PP
在文件 \fBProcessManager\&.h\fP 第 \fB73\fP 行定义\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 My Shell 的 源代码自动生成\&.
