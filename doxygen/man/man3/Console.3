.TH "Console" 3 "2022年 八月 13日 星期六" "Version 1.0.0" "My Shell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Console \- 控制台 存储必要的环境变量以及渲染用户前端所需要的数据  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Console\&.h>\fP
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBConsole\fP ()"
.br
.ti -1c
.RI "virtual \fB~Console\fP ()"
.br
.ti -1c
.RI "int \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBConsoleJobList\fP () const"
.br
.ti -1c
.RI "void \fBConsoleJobListDone\fP ()"
.br
.ti -1c
.RI "unsigned int \fBAddJob\fP (int pid, \fBjob_state\fP state, int \fBargc\fP, char *\fBargv\fP[])"
.br
.ti -1c
.RI "void \fBResetChildPid\fP ()"
.br
.ti -1c
.RI "void \fBSetInputFD\fP (int _fd)"
.br
.ti -1c
.RI "void \fBSetOutputFD\fP (int _fd)"
.br
.ti -1c
.RI "void \fBSetErrorFD\fP (int _fd)"
.br
.ti -1c
.RI "int \fBGetInputFD\fP () const"
.br
.ti -1c
.RI "int \fBGetOutputFD\fP () const"
.br
.ti -1c
.RI "int \fBGetErrorFD\fP () const"
.br
.ti -1c
.RI "void \fBSetInputRedirect\fP ()"
.br
.ti -1c
.RI "void \fBSetOutputRedirect\fP ()"
.br
.ti -1c
.RI "void \fBSetErrorRedirect\fP ()"
.br
.ti -1c
.RI "void \fBResetInputRedirect\fP ()"
.br
.ti -1c
.RI "void \fBResetOutputRedirect\fP ()"
.br
.ti -1c
.RI "void \fBResetErrorRedirect\fP ()"
.br
.ti -1c
.RI "bool \fBGetInputRedirect\fP () const"
.br
.ti -1c
.RI "bool \fBGetOutputRedirect\fP () const"
.br
.ti -1c
.RI "bool \fBGetErrorRedirect\fP () const"
.br
.ti -1c
.RI "int \fBGetSTDIN\fP () const"
.br
.ti -1c
.RI "int \fBGetSTDOUT\fP () const"
.br
.ti -1c
.RI "int \fBGetSTDERR\fP () const"
.br
.ti -1c
.RI "void \fBSetMask\fP (mode_t _mask)"
.br
.ti -1c
.RI "mode_t \fBGetMask\fP () const"
.br
.in -1c
.SS "Private 属性"

.in +1c
.ti -1c
.RI "char \fBuser_name\fP [\fBBUFFER_SIZE\fP]"
.br
.ti -1c
.RI "char \fBhost_name\fP [\fBBUFFER_SIZE\fP]"
.br
.ti -1c
.RI "char \fBcurrent_working_dictionary\fP [\fBBUFFER_SIZE\fP]"
.br
.ti -1c
.RI "char \fBhome\fP [\fBBUFFER_SIZE\fP]"
.br
.ti -1c
.RI "char \fBshell_path_env\fP [\fBBUFFER_SIZE\fP]"
.br
.ti -1c
.RI "pid_t \fBprocess_id\fP"
.br
.ti -1c
.RI "\fBProcessManager\fP * \fBprocess_manager\fP"
.br
.ti -1c
.RI "int \fBinput_file_descriptor\fP"
.br
.ti -1c
.RI "int \fBoutput_file_descriptor\fP"
.br
.ti -1c
.RI "int \fBerror_file_descriptor\fP"
.br
.ti -1c
.RI "bool \fBredirect_input\fP"
.br
.ti -1c
.RI "bool \fBredirect_output\fP"
.br
.ti -1c
.RI "bool \fBredirect_error\fP"
.br
.ti -1c
.RI "mode_t \fBumask_\fP"
.br
.ti -1c
.RI "int \fBargc\fP"
.br
.ti -1c
.RI "char \fBargv\fP [\fBMAX_ARGUMENT_NUMBER\fP][\fBBUFFER_SIZE\fP]"
.br
.in -1c
.SS "静态 Private 属性"

.in +1c
.ti -1c
.RI "static pid_t \fBchild_process_id\fP = \-1"
.br
.ti -1c
.RI "static int \fBinput_std_fd\fP"
.br
.ti -1c
.RI "static int \fBoutput_std_fd\fP"
.br
.ti -1c
.RI "static int \fBerror_std_fd\fP"
.br
.in -1c
.SS "友元"

.in +1c
.ti -1c
.RI "class \fBDisplay\fP"
.br
.ti -1c
.RI "class \fBExecutor\fP"
.br
.ti -1c
.RI "class \fBProcessManager\fP"
.br
.ti -1c
.RI "void \fBSignalHandler\fP (int)"
.br
.RI "信号控制与处理 "
.in -1c
.SH "详细描述"
.PP 
控制台 存储必要的环境变量以及渲染用户前端所需要的数据 
.PP
在文件 \fBConsole\&.h\fP 第 \fB38\fP 行定义\&.
.SH "构造及析构函数说明"
.PP 
.SS "Console::Console ()"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB32\fP 行定义\&.
.SS "Console::~Console ()\fC [virtual]\fP"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB44\fP 行定义\&.
.SH "成员函数说明"
.PP 
.SS "unsigned int Console::AddJob (int pid, \fBjob_state\fP state, int argc, char * argv[])"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB213\fP 行定义\&.
.SS "void Console::ConsoleJobList () const"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB201\fP 行定义\&.
.SS "void Console::ConsoleJobListDone ()"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB207\fP 行定义\&.
.SS "int Console::GetErrorFD () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB110\fP 行定义\&.
.SS "bool Console::GetErrorRedirect () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB131\fP 行定义\&.
.SS "int Console::GetInputFD () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB106\fP 行定义\&.
.SS "bool Console::GetInputRedirect () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB127\fP 行定义\&.
.SS "mode_t Console::GetMask () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB143\fP 行定义\&.
.SS "int Console::GetOutputFD () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB108\fP 行定义\&.
.SS "bool Console::GetOutputRedirect () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB129\fP 行定义\&.
.SS "int Console::GetSTDERR () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB138\fP 行定义\&.
.SS "int Console::GetSTDIN () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB134\fP 行定义\&.
.SS "int Console::GetSTDOUT () const\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB136\fP 行定义\&.
.SS "int Console::init ()"

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB123\fP 行定义\&.
.SS "void Console::ResetChildPid ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB96\fP 行定义\&.
.SS "void Console::ResetErrorRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB124\fP 行定义\&.
.SS "void Console::ResetInputRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB120\fP 行定义\&.
.SS "void Console::ResetOutputRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB122\fP 行定义\&.
.SS "void Console::SetErrorFD (int _fd)\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB103\fP 行定义\&.
.SS "void Console::SetErrorRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB117\fP 行定义\&.
.SS "void Console::SetInputFD (int _fd)\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB99\fP 行定义\&.
.SS "void Console::SetInputRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB113\fP 行定义\&.
.SS "void Console::SetMask (mode_t _mask)\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB141\fP 行定义\&.
.SS "void Console::SetOutputFD (int _fd)\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB101\fP 行定义\&.
.SS "void Console::SetOutputRedirect ()\fC [inline]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB115\fP 行定义\&.
.SH "友元及相关函数文档"
.PP 
.SS "friend class \fBDisplay\fP\fC [friend]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB145\fP 行定义\&.
.SS "friend class \fBExecutor\fP\fC [friend]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB146\fP 行定义\&.
.SS "friend class \fBProcessManager\fP\fC [friend]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB147\fP 行定义\&.
.SS "void SignalHandler (int signal_)\fC [friend]\fP"

.PP
信号控制与处理 
.PP
\fB参数\fP
.RS 4
\fIsignal_\fP 
.RE
.PP
\fB版本\fP
.RS 4
0\&.1 
.RE
.PP
\fB作者\fP
.RS 4
邱日宏 (3200105842@zju.edu.cn) 
.RE
.PP
\fB日期\fP
.RS 4
2022-07-21 
.RE
.PP
\fB版权所有\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.PP
在文件 \fBConsole\&.cpp\fP 第 \fB49\fP 行定义\&.
.SH "类成员变量说明"
.PP 
.SS "int Console::argc\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB74\fP 行定义\&.
.SS "char Console::argv[\fBMAX_ARGUMENT_NUMBER\fP][\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB75\fP 行定义\&.
.SS "pid_t Console::child_process_id = \-1\fC [static]\fP, \fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB53\fP 行定义\&.
.SS "char Console::current_working_dictionary[\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB44\fP 行定义\&.
.SS "int Console::error_file_descriptor\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB59\fP 行定义\&.
.SS "int Console::error_std_fd\fC [static]\fP, \fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB64\fP 行定义\&.
.SS "char Console::home[\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB46\fP 行定义\&.
.SS "char Console::host_name[\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB43\fP 行定义\&.
.SS "int Console::input_file_descriptor\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB57\fP 行定义\&.
.SS "int Console::input_std_fd\fC [static]\fP, \fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB62\fP 行定义\&.
.SS "int Console::output_file_descriptor\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB58\fP 行定义\&.
.SS "int Console::output_std_fd\fC [static]\fP, \fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB63\fP 行定义\&.
.SS "pid_t Console::process_id\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB52\fP 行定义\&.
.SS "\fBProcessManager\fP* Console::process_manager\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB54\fP 行定义\&.
.SS "bool Console::redirect_error\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB69\fP 行定义\&.
.SS "bool Console::redirect_input\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB67\fP 行定义\&.
.SS "bool Console::redirect_output\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB68\fP 行定义\&.
.SS "char Console::shell_path_env[\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB49\fP 行定义\&.
.SS "mode_t Console::umask_\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB72\fP 行定义\&.
.SS "char Console::user_name[\fBBUFFER_SIZE\fP]\fC [private]\fP"

.PP
在文件 \fBConsole\&.h\fP 第 \fB42\fP 行定义\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 My Shell 的 源代码自动生成\&.
