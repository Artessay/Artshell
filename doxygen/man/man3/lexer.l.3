.TH "src/lexer.l" 3 "2022年 八月 13日 星期六" "Version 1.0.0" "My Shell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/lexer.l
.SH SYNOPSIS
.br
.PP
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBMAX_ARGUMENT_NUMBER\fP   128"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "int \fByylex\fP (void)"
.br
.ti -1c
.RI "int \fByywrap\fP ()"
.br
.ti -1c
.RI "int \fByy_lexer\fP (int *argc, char ***argv)"
.br
.in -1c
.SS "变量"

.in +1c
.ti -1c
.RI "char * \fB_argvector\fP [\fBMAX_ARGUMENT_NUMBER\fP]"
.br
.ti -1c
.RI "int \fB_argcounter\fP = 0"
.br
.in -1c
.SH "宏定义说明"
.PP 
.SS "#define MAX_ARGUMENT_NUMBER   128"

.PP
在文件 \fBlexer\&.l\fP 第 \fB2\fP 行定义\&.
.SH "函数说明"
.PP 
.SS "int yy_lexer (int * argc, char *** argv)"

.PP
在文件 \fBlexer\&.l\fP 第 \fB43\fP 行定义\&.
.SS "int yylex (void)"

.PP
在文件 \fBlexer\&.l\fP 第 \fB12\fP 行定义\&.
.SS "int yywrap ()"

.PP
在文件 \fBlexer\&.l\fP 第 \fB38\fP 行定义\&.
.SH "变量说明"
.PP 
.SS "int _argcounter = 0"

.PP
在文件 \fBlexer\&.l\fP 第 \fB4\fP 行定义\&.
.SS "char* _argvector[\fBMAX_ARGUMENT_NUMBER\fP]"

.PP
在文件 \fBlexer\&.l\fP 第 \fB3\fP 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 My Shell 的 源代码自动生成\&.
